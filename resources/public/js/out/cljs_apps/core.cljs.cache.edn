;; Analyzed by ClojureScript 1.7.170
{:use-macros {defroute secretary.core}, :excludes #{}, :name cljs-apps.core, :imports {History goog.History}, :requires {goog.dom goog.dom, reagent reagent.core, secretary secretary.core, bouncer.validators bouncer.validators, dom goog.dom, bouncer.core bouncer.core, EventType goog.history.EventType, reagent.core reagent.core, v bouncer.validators, goog.history.EventType goog.history.EventType, History goog.History, events goog.events, secretary.core secretary.core, goog.events goog.events, b bouncer.core}, :uses {atom reagent.core, render reagent.core}, :defs {input-element {:protocol-inline nil, :meta {:file "/home/siva/git_projects/cljs-workspace/cljs-apps/src/cljs/cljs_apps/core.cljs", :line 17, :column 7, :end-line 17, :end-column 20, :arglists (quote ([id name type value])), :doc "An input element which updates its value on change"}, :name cljs-apps.core/input-element, :variadic false, :file "src/cljs/cljs_apps/core.cljs", :end-column 20, :method-params ([id name type value]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 17, :end-line 17, :max-fixed-arity 4, :fn-var true, :arglists (quote ([id name type value])), :doc "An input element which updates its value on change"}, prompt-message {:protocol-inline nil, :meta {:file "/home/siva/git_projects/cljs-workspace/cljs-apps/src/cljs/cljs_apps/core.cljs", :line 27, :column 7, :end-line 27, :end-column 21, :arglists (quote ([message])), :doc "A prompt that will animate to help the user with a given input"}, :name cljs-apps.core/prompt-message, :variadic false, :file "src/cljs/cljs_apps/core.cljs", :end-column 21, :method-params ([message]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 27, :end-line 27, :max-fixed-arity 1, :fn-var true, :arglists (quote ([message])), :doc "A prompt that will animate to help the user with a given input"}, email-input {:protocol-inline nil, :meta {:file "/home/siva/git_projects/cljs-workspace/cljs-apps/src/cljs/cljs_apps/core.cljs", :line 37, :column 7, :end-line 37, :end-column 18, :arglists (quote ([email-address-atom]))}, :name cljs-apps.core/email-input, :variadic false, :file "src/cljs/cljs_apps/core.cljs", :end-column 18, :method-params ([email-address-atom]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 37, :end-line 37, :max-fixed-arity 1, :fn-var true, :arglists (quote ([email-address-atom]))}, home-page {:protocol-inline nil, :meta {:file "/home/siva/git_projects/cljs-workspace/cljs-apps/src/cljs/cljs_apps/core.cljs", :line 45, :column 7, :end-line 45, :end-column 16, :arglists (quote ([]))}, :name cljs-apps.core/home-page, :variadic false, :file "src/cljs/cljs_apps/core.cljs", :end-column 16, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 45, :end-line 45, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, render-simple {:protocol-inline nil, :meta {:file "/home/siva/git_projects/cljs-workspace/cljs-apps/src/cljs/cljs_apps/core.cljs", :line 60, :column 7, :end-line 60, :end-column 20, :arglists (quote ([]))}, :name cljs-apps.core/render-simple, :variadic false, :file "src/cljs/cljs_apps/core.cljs", :end-column 20, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 60, :end-line 60, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}}, :require-macros {secretary.core secretary.core, v bouncer.validators, bouncer.validators bouncer.validators, secretary secretary.core}, :cljs.analyzer/constants {:seen #{:name :value :type :div :div.container :class :input#id.form-control :h2 :form :on-change :p :required :div.signup-form}, :order [:input#id.form-control :name :type :required :value :on-change :div :class :p :div.container :div.signup-form :h2 :form]}, :doc nil}